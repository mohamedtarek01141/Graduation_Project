// <auto-generated />
using System;
using Graduation_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Graduation_Project.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Graduation_Project.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FloorNumber")
                        .HasColumnType("int");

                    b.Property<bool>("HasBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("HasElevator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFurnished")
                        .HasColumnType("bit");

                    b.Property<int>("PropretyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropretyId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("Graduation_Project.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasGarage")
                        .HasColumnType("bit");

                    b.Property<bool>("HasGarden")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfFloors")
                        .HasColumnType("int");

                    b.Property<int>("PropretyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropretyId");

                    b.ToTable("Houses");
                });

            modelBuilder.Entity("Graduation_Project.Models.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("PropretyId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("PropretyId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Graduation_Project.Models.Proprety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowVisitRequest")
                        .HasColumnType("bit");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfBathRooms")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("SellingType")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Userid");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Graduation_Project.Models.RequestVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("PreferredTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PropretyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropretyId");

                    b.HasIndex("UserId");

                    b.ToTable("RequestVisits");
                });

            modelBuilder.Entity("Graduation_Project.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Graduation_Project.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("HasGarden")
                        .HasColumnType("bit");

                    b.Property<bool>("HasRoof")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSwimmingPool")
                        .HasColumnType("bit");

                    b.Property<int>("PropretyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PropretyId");

                    b.ToTable("Villas");
                });

            modelBuilder.Entity("Graduation_Project.Models.Apartment", b =>
                {
                    b.HasOne("Graduation_Project.Models.Proprety", "Proprety")
                        .WithMany("Apartments")
                        .HasForeignKey("PropretyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprety");
                });

            modelBuilder.Entity("Graduation_Project.Models.House", b =>
                {
                    b.HasOne("Graduation_Project.Models.Proprety", "Proprety")
                        .WithMany("Houses")
                        .HasForeignKey("PropretyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprety");
                });

            modelBuilder.Entity("Graduation_Project.Models.Image", b =>
                {
                    b.HasOne("Graduation_Project.Models.Proprety", "Proprety")
                        .WithMany("Images")
                        .HasForeignKey("PropretyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprety");
                });

            modelBuilder.Entity("Graduation_Project.Models.Proprety", b =>
                {
                    b.HasOne("Graduation_Project.Models.User", "User")
                        .WithMany("Propreties")
                        .HasForeignKey("Userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Graduation_Project.Models.RequestVisit", b =>
                {
                    b.HasOne("Graduation_Project.Models.Proprety", "Proprety")
                        .WithMany()
                        .HasForeignKey("PropretyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation_Project.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprety");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Graduation_Project.Models.Villa", b =>
                {
                    b.HasOne("Graduation_Project.Models.Proprety", "Proprety")
                        .WithMany("Villas")
                        .HasForeignKey("PropretyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proprety");
                });

            modelBuilder.Entity("Graduation_Project.Models.Proprety", b =>
                {
                    b.Navigation("Apartments");

                    b.Navigation("Houses");

                    b.Navigation("Images");

                    b.Navigation("Villas");
                });

            modelBuilder.Entity("Graduation_Project.Models.User", b =>
                {
                    b.Navigation("Propreties");
                });
#pragma warning restore 612, 618
        }
    }
}
